generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model coupons {
  coupon_code Int            @id @default(autoincrement())
  user_id     Int
  meal        coupons_meal
  type        coupons_type   @default(default)
  status      coupons_status @default(active)
  redeemed_at DateTime?      @db.Timestamp(0)
  assigned_at DateTime?      @db.Timestamp(0)
  users       users          @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "coupons_ibfk_1")

  @@index([user_id], map: "user_id")
}

model events {
  id            Int             @id
  name          String          @db.VarChar(100)
  registrations registrations[]
}

model registrations {
  id                                    Int    @id @default(autoincrement())
  event_id                              Int
  player1_id                            Int
  player2_id                            Int?
  events                                events @relation(fields: [event_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "registrations_ibfk_1")
  users_registrations_player1_idTousers users  @relation("registrations_player1_idTousers", fields: [player1_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "registrations_ibfk_2")
  users_registrations_player2_idTousers users? @relation("registrations_player2_idTousers", fields: [player2_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "registrations_ibfk_3")

  @@index([event_id], map: "event_id")
  @@index([player1_id], map: "player1_id")
  @@index([player2_id], map: "player2_id")
}

model users {
  id                                            Int             @id @default(autoincrement())
  name                                          String          @db.VarChar(50)
  dob                                           DateTime        @db.Date
  gender                                        users_gender
  phone                                         String          @db.VarChar(15)
  coupons                                       coupons[]
  registrations_registrations_player1_idTousers registrations[] @relation("registrations_player1_idTousers")
  registrations_registrations_player2_idTousers registrations[] @relation("registrations_player2_idTousers")
  shirts                                        shirts[]
  sponsorship                                   sponsorship[]
}

model shirts {
  id      Int          @id @default(autoincrement())
  user_id Int
  name    String?      @db.VarChar(20)
  size    shirts_size?
  type    shirts_type?
  users   users        @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "shirts_ibfk_1")

  @@index([user_id], map: "user_id")
}

model sponsorship {
  id      Int   @id @default(autoincrement())
  user_id Int
  amount  Int
  users   users @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "sponsorship_ibfk_1")

  @@index([user_id], map: "user_id")
}

enum users_gender {
  Male
  Female
}

enum coupons_type {
  default
  bought
}

enum coupons_meal {
  lunch
  snack
}

enum shirts_size {
  XS
  S
  M
  L
  XL
  XXL
}

enum coupons_status {
  active
  redeemed
}

enum shirts_type {
  ROUND_HALF
  ROUND_SLEEVELESS
  COLLAR_HALF
}
